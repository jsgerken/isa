version: "3"
services:
  models:
    image: tp33/django
    container_name: models
    external_links:
      - mysql:db
    volumes:
      - ./models:/app
    ports:
      - "8001:8000"
    networks:
      - service_mesh
      - backend
    command: bash -c "pip install whitenoise
      && pip install django-crispy-forms
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py loaddata ./fixtures/manufacturer_fixtures.json
      && python manage.py loaddata ./fixtures/product_fixtures.json
      && mod_wsgi-express start-server --reload-on-changes ./models/wsgi.py"

  services:
    image: tp33/django
    container_name: services
    networks:
      - service_mesh
      - public
    ports:
      - "8002:8000"
    volumes:
      - ./services:/app
    command: bash -c "python -u load_es_fixtures.py & mod_wsgi-express start-server --reload-on-changes ./services/wsgi.py && fg"

  frontend:
    image: tp33/django
    container_name: frontend
    networks:
      - public
    ports:
      - "8000:8000"
    volumes:
      - ./frontend:/app
    command: bash -c "pip install whitenoise
      && pip install django-crispy-forms
      && mod_wsgi-express start-server --reload-on-changes ./frontend/wsgi.py"

  kafka:
    image: spotify/kafka
    container_name: kafka
    networks:
        - batch_network
        - service_mesh
    environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
    hostname: kafka
    
  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
        - discovery.type=single-node
    networks:
        - service_mesh
        - batch_network
    ports:
        - "9200:9200"
  
  batch:
    image: tp33/django
    container_name: batch
    networks:
        - batch_network
    depends_on: 
      - "es"
      - "kafka"
    restart: on-failure
    command: 
      - /bin/bash
      - -c
      - |
          set -m
          python -u logger.py &
          python -u count_logs.py & 
          python -u batch.py & 
          wait $$!

    volumes:
      - ./batch:/app

networks:
  backend:
  service_mesh:
  public:
  batch_network:
